package com.ironman.ma.Algorithms.PandC.BackTracking.BackTracking.Sudoku;

import junit.framework.TestCase;

public class SolutionTest extends TestCase {

    public void testSolveSudoku() {
//        int[][] board = new int[][]{{5, 3, 0, 0, 7, 0, 0, 0, 0},
//                {6, 0, 0, 1, 9, 5, 0, 0, 0},
//                {0, 9, 8, 0, 0, 0, 0, 6, 0},
//                {8, 0, 0, 0, 6, 0, 0, 0, 3},
//                {4, 0, 0, 8, 0, 3, 0, 0, 1},
//                {7, 0, 0, 0, 2, 0, 0, 0, 6},
//                {0, 6, 0, 0, 0, 0, 2, 8, 0},
//                {0, 0, 0, 4, 1, 9, 0, 0, 5},
//                {0, 0, 0, 0, 8, 0, 0, 7, 9}};

//        char[][] board = new char[][]{
//                {'5', '3', '0', '0', '7', '0', '0', '0', '0'},
//                {'6', '0', '0', '1', '9', '5', '0', '0', '0'},
//                {'0', '9', '8', '0', '0', '0', '0', '6', '0'},
//                {'8', '0', '0', '0', '6', '0', '0', '0', '3'},
//                {'4', '0', '0', '8', '0', '3', '0', '0', '1'},
//                {'7', '0', '0', '0', '2', '0', '0', '0', '6'},
//                {'0', '6', '0', '0', '0', '0', '2', '8', '0'},
//                {'0', '0', '0', '4', '1', '9', '0', '0', '5'},
//                {'0', '0', '0', '0', '8', '0', '0', '7', '9'}};
        char[][] board = new char[][]{
                {5, 3, '.', '.', 7, '.', '.', '.', '.'},
                {6, '.', '.', 1, 9, 5, '.', '.', '.'},
                {'.', 9, 8, '.', '.', '.', '.', 6, '.'},
                {8, '.', '.', '.', 6, '.', '.', '.', 3},
                {4, '.', '.', 8, '.', 3, '.', '.', 1},
                {7, '.', '.', '.', 2, '.', '.', '.', 6},
                {'.', 6, '.', '.', '.', '.', 2, 8, '.'},
                {'.', '.', '.', 4, 1, 9, '.', '.', 5},
                {'.', '.', '.', '.', 8, '.', '.', 7, 9}};

//        int[][] board = new int[][]{
//                {1, 0, 0, 0},
//                {0, 3, 1, 0},
//                {0, 2, 4, 0},
//                {0, 0, 0, 2}};
//        System.out.println(new Solution().solveSudoku(board));
        System.out.println(new Solution().solveSudokuL(board));
    }
}